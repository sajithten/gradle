buildscript {
    ext {
        springBootVersion = '3.0.1.RELEASE'
                jacocoVersion = '0.8.7'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.5.0.2730"
    }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.gradle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'
group = 'com.gradle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
jacoco{
  toolVersion = "${jacocoVersion}"
}

jacocoTestReport {
 reports{
  html.enabled=true
  xml.enabled=true
  csv.enabled=true
 }
}
sonarqube {
    properties {

    property "sonar.projectName", "gradle-demo"
    property "sonar.exclusions", "**/generated- */**/*"
    property "sonar.projectKey", "org.sonarqubeJacocoCodeCoverage"
    property "sonar.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.host.url", "http://13.234.33.84:9000/"
    property "sonar.sources", "src/main/java"
    property "sonar.tests", "src/test/java"

    

	}
}